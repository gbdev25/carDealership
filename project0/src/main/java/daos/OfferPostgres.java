package daos;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import driver.Driver;
import models.Offer;
import models.User;
import util.ConnectionUtil;

public class OfferPostgres implements OfferDAO {
	private static Logger log = LogManager.getLogger(OfferPostgres.class);
	@Override
	public Offer createOffer(Offer o) {
		String sql = "insert into Offers (Offer_amount, Product_id,Offer_username) values (?,?,?) returning Offer_id;";
		try(Connection c = ConnectionUtil.getLocalConnection()){
			PreparedStatement ps = c.prepareStatement(sql);
			ps.setInt(1, o.getOfferAmount());
			ps.setInt(2, o.getProductId());
			ps.setString(3, o.getUsername());
			
			ResultSet rs = ps.executeQuery(); // return the id generated by the database
			if(rs.next()) {
				o.setOfferId(rs.getInt("Offer_id"));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			log.info("SQLException thrown" + e.fillInStackTrace());
		}
		return o;
	}

	@Override
	public List<Offer> retrievePendingOffers() {
		String sql = "select * from Offers where Offer_status = 'pending';";
		List<Offer> offers = new ArrayList<>();
		
		try(Connection c = ConnectionUtil.getLocalConnection()){
	
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery(sql);
			
			while(rs.next()) {
				Offer o = new Offer();
				o.setOfferId(rs.getInt("Offer_id"));
				o.setUsername(rs.getString("Offer_username"));
				o.setOfferAmount(rs.getInt("Offer_amount"));
				o.setProductId(rs.getInt("Product_id"));
				
				
				offers.add(o);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return offers;
	}

	@Override
	public boolean desicionOffer(Offer o) {
		String sql = "update Offers set offer_status = ? where offer_id = ?;";
		int rowsChanged = -1;
		
		try(Connection c = ConnectionUtil.getLocalConnection()){
			PreparedStatement ps = c.prepareStatement(sql);
			ps.setString(1, o.getOfferStatus());
			ps.setInt(2, o.getOfferId());
			
			
			
			
			rowsChanged = ps.executeUpdate();
							
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(rowsChanged < 1) {
			return false;
		}
	return true;	}
	}

	

